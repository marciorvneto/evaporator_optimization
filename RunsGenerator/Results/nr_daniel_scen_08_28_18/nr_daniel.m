addpath('../Core');
addpath('../Thermo');
addpath('../Solvers');
addpath('../Thermo/SteamTables');
addpath('../Numerical routines');

%% Defining blocks

CONV_BTU = 5.678;
CONV_FT2 = 0.00929;

E1 = Evaporator(200*CONV_BTU,4400*CONV_FT2,'EVAP-1');
EPAR = Evaporator(187*CONV_BTU,4400*CONV_FT2,'EVAP-0');
E3 = Evaporator(423*CONV_BTU,8800*CONV_FT2,'EVAP-3');
E2 = Evaporator(246*CONV_BTU,4400*CONV_FT2,'EVAP-2');
E5 = Evaporator(313*CONV_BTU,8800*CONV_FT2,'EVAP-5');
E4 = Evaporator(391*CONV_BTU,8800*CONV_FT2,'EVAP-4');
E7 = Evaporator(187*CONV_BTU,8800*CONV_FT2,'EVAP-7');
E6 = Evaporator(233*CONV_BTU,8800*CONV_FT2,'EVAP-6');
ESER = Evaporator(200*CONV_BTU,8800*CONV_FT2,'EVAP-8');
F1 = Flash('FLASH-1');
F0 = Flash('FLASH-0');
F3 = BLFlash('FLASH-3');
F2 = Flash('FLASH-2');
F5 = Flash('FLASH-5');
F4 = Flash('FLASH-4');
F7 = Flash('FLASH-7');
F6 = Flash('FLASH-6');
VMix1 = VMixer('MIX-1');
VMix0 = VMixer('MIX-0');
VMix3 = VMixer('MIX-3');
VMix2 = VMixer('MIX-2');
VMix5 = VMixer('MIX-5');
VMix4 = VMixer('MIX-4');
LMix7 = LMixer('MIX-7');
LMix6 = LMixer('MIX-6');
LMix9 = LMixer('MIX-9');
VSpl1 = VSplitter('SPL-1');
VSpl0 = VSplitter('SPL-0');
LSpl3 = LSplitter('SPL-3');
LSpl2 = LSplitter('SPL-2');
LSpl5 = LSplitter('SPL-5');
LSpl7 = LSplitter('SPL-7');
VSpl9 = VSplitter('SPL-9');
%% Defining streams
L24 = LiquidStream('BLSTREAM-24','BLIQ');
L25 = LiquidStream('BLSTREAM-25','BLIQ');
L26 = LiquidStream('BLSTREAM-26','BLIQ');
Lout = LiquidStream('BLOUT','BLIQ');
L22 = LiquidStream('BLSTREAM-22','BLIQ');
L23 = LiquidStream('BLSTREAM-23','BLIQ');
L28 = LiquidStream('BLSTREAM-28','BLIQ');
L1 = LiquidStream('BLSTREAM-1','BLIQ');
L0 = LiquidStream('BLSTREAM-0','BLIQ');
BLToSer = LiquidStream('BLSER','BLIQ');
F = LiquidStream('BLIN','BLIQ');
L5 = LiquidStream('BLSTREAM-5','BLIQ');
L4 = LiquidStream('BLSTREAM-4','BLIQ');
L7 = LiquidStream('BLSTREAM-7','BLIQ');
L6 = LiquidStream('BLSTREAM-6','BLIQ');
L9 = LiquidStream('BLSTREAM-9','BLIQ');
L8 = LiquidStream('BLSTREAM-8','BLIQ');
BLToPar = LiquidStream('BLPAR','BLIQ');
L10 = LiquidStream('BLSTREAM-10','BLIQ');
L13 = LiquidStream('BLSTREAM-13','BLIQ');
L14 = LiquidStream('BLSTREAM-14','BLIQ');
L18 = LiquidStream('BLSTREAM-18','BLIQ');
C11 = CondensateStream('CSTREAM-11','COND');
C10 = CondensateStream('CSTREAM-10','COND');
C13 = CondensateStream('CSTREAM-13','COND');
C12 = CondensateStream('CSTREAM-12','COND');
C15 = CondensateStream('CSTREAM-15','COND');
C14 = CondensateStream('CSTREAM-14','COND');
C1 = CondensateStream('CSTREAM-1','COND');
C0 = CondensateStream('CSTREAM-0','COND');
C3 = CondensateStream('CSTREAM-3','COND');
C2 = CondensateStream('CSTREAM-2','COND');
C5 = CondensateStream('CSTREAM-5','COND');
C4 = CondensateStream('CSTREAM-4','COND');
C7 = CondensateStream('CSTREAM-7','COND');
C6 = CondensateStream('CSTREAM-6','COND');
C9 = CondensateStream('CSTREAM-9','COND');
C8 = CondensateStream('CSTREAM-8','COND');
V24 = VaporStream('VSTREAM-24','VAPO');
V25 = VaporStream('VSTREAM-25','VAPO');
V26 = VaporStream('VSTREAM-26','VAPO');
V27 = VaporStream('VSTREAM-27','VAPO');
V20 = VaporStream('VSTREAM-20','VAPO');
V21 = VaporStream('VSTREAM-21','VAPO');
V23 = VaporStream('VSTREAM-23','VAPO');
Vout2 = VaporStream('VOUT2','VAPO');
V29 = VaporStream('VSTREAM-29','VAPO');
S = VaporStream('VIN','VAPO');
V0 = VaporStream('VSTREAM-0','VAPO');
V3 = VaporStream('VSTREAM-3','VAPO');
V2 = VaporStream('VSTREAM-2','VAPO');
V5 = VaporStream('VSTREAM-5','VAPO');
V4 = VaporStream('VSTREAM-4','VAPO');
V7 = VaporStream('VSTREAM-7','VAPO');
V6 = VaporStream('VSTREAM-6','VAPO');
V9 = VaporStream('VSTREAM-9','VAPO');
V8 = VaporStream('VSTREAM-8','VAPO');
V11 = VaporStream('VSTREAM-11','VAPO');
V10 = VaporStream('VSTREAM-10','VAPO');
V13 = VaporStream('VSTREAM-13','VAPO');
V12 = VaporStream('VSTREAM-12','VAPO');
V15 = VaporStream('VSTREAM-15','VAPO');
V14 = VaporStream('VSTREAM-14','VAPO');
V17 = VaporStream('VSTREAM-17','VAPO');
V16 = VaporStream('VSTREAM-16','VAPO');
V18 = VaporStream('VSTREAM-18','VAPO');
V31 = VaporStream('VSTREAM-31','VAPO');
Vout1 = VaporStream('VOUT1','VAPO');
%% Creating a handler for blocks and streams
handler = Handler();
%% Including blocks
handler.addBlock(LSpl2);
handler.addBlock(LSpl7);
handler.addBlock(LMix6);
handler.addBlock(LSpl5);
handler.addBlock(VMix2);
handler.addBlock(E1);
handler.addBlock(F6);
handler.addBlock(ESER);
handler.addBlock(F4);
handler.addBlock(VMix3);
handler.addBlock(F2);
handler.addBlock(F0);
handler.addBlock(EPAR);
handler.addBlock(E2);
handler.addBlock(E6);
handler.addBlock(VMix0);
handler.addBlock(E4);
handler.addBlock(LMix7);
handler.addBlock(VMix1);
handler.addBlock(E3);
handler.addBlock(E7);
handler.addBlock(F7);
handler.addBlock(LMix9);
handler.addBlock(VMix4);
handler.addBlock(F5);
handler.addBlock(VSpl1);
handler.addBlock(VSpl0);
handler.addBlock(F3);
handler.addBlock(F1);
handler.addBlock(VMix5);
handler.addBlock(LSpl3);
handler.addBlock(VSpl9);
handler.addBlock(E5);
%% Including streams
handler.addStream(V18);
handler.addStream(L26);
handler.addStream(L25);
handler.addStream(L10);
handler.addStream(V9);
handler.addStream(V14);
handler.addStream(Vout1);
handler.addStream(C8);
handler.addStream(C11);
handler.addStream(V20);
handler.addStream(L13);
handler.addStream(V6);
handler.addStream(C4);
handler.addStream(BLToPar);
handler.addStream(V4);
handler.addStream(V11);
handler.addStream(V17);
handler.addStream(V15);
handler.addStream(V23);
handler.addStream(V8);
handler.addStream(L18);
handler.addStream(Lout);
handler.addStream(V13);
handler.addStream(L4);
handler.addStream(L24);
handler.addStream(C9);
handler.addStream(C10);
handler.addStream(C2);
handler.addStream(L5);
handler.addStream(L9);
handler.addStream(V2);
handler.addStream(V24);
handler.addStream(V12);
handler.addStream(C1);
handler.addStream(C0);
handler.addStream(C3);
handler.addStream(L1);
handler.addStream(Vout2);
handler.addStream(V21);
handler.addStream(V16);
handler.addStream(V27);
handler.addStream(V10);
handler.addStream(V25);
handler.addStream(C14);
handler.addStream(C12);
handler.addStream(L0);
handler.addStream(C6);
handler.addStream(L22);
handler.addStream(V29);
handler.addStream(L6);
handler.addStream(L23);
handler.addStream(C5);
handler.addStream(L7);
handler.addStream(V26);
handler.addStream(L28);
handler.addStream(L8);
handler.addStream(BLToSer);
handler.addStream(C7);
handler.addStream(V3);
handler.addStream(L14);
handler.addStream(V7);
handler.addStream(C15);
handler.addStream(V5);
handler.addStream(V0);
handler.addStream(V31);
handler.addStream(C13);
handler.addStream(F);
handler.addStream(S);
%% Connecting streams
handler.connectBlocks(LMix9,E1,L24);
handler.connectBlocks(LSpl7,LMix7,L25);
handler.connectBlocks(LMix7,F3,L26);
handler.connectOutStream(F3,Lout);
handler.connectBlocks(LSpl7,LMix9,L22);
handler.connectBlocks(LSpl5,LMix9,L23);
handler.connectBlocks(ESER,LMix6,L28);
handler.connectBlocks(LSpl3,E7,L1);
handler.connectBlocks(LSpl3,E6,L0);
handler.connectBlocks(LSpl2,ESER,BLToSer);
handler.connectInStream(LSpl2,F);
handler.connectBlocks(E6,LMix6,L5);
handler.connectBlocks(LSpl2,LSpl3,L4);
handler.connectBlocks(LMix6,E5,L7);
handler.connectBlocks(E7,LMix6,L6);
handler.connectBlocks(E4,E3,L9);
handler.connectBlocks(E5,E4,L8);
handler.connectBlocks(LSpl5,EPAR,BLToPar);
handler.connectBlocks(E3,LSpl5,L10);
handler.connectBlocks(E1,E2,L13);
handler.connectBlocks(E2,LMix7,L14);
handler.connectBlocks(EPAR,LSpl7,L18);
handler.connectBlocks(E6,F6,C11);
handler.connectBlocks(E5,F5,C10);
handler.connectOutStream(F6,C13);
handler.connectOutStream(F5,C12);
handler.connectOutStream(F7,C15);
handler.connectBlocks(E7,F7,C14);
handler.connectBlocks(E1,F1,C1);
handler.connectBlocks(E2,F0,C0);
handler.connectBlocks(E3,F2,C3);
handler.connectOutStream(EPAR,C2);
handler.connectOutStream(F0,C5);
handler.connectBlocks(E4,F4,C4);
handler.connectOutStream(ESER,C7);
handler.connectOutStream(F1,C6);
handler.connectOutStream(F4,C9);
handler.connectOutStream(F2,C8);
handler.connectBlocks(F4,VMix2,V24);
handler.connectBlocks(F6,VMix4,V25);
handler.connectBlocks(F5,VMix3,V26);
handler.connectBlocks(F7,VMix5,V27);
handler.connectBlocks(VMix5,ESER,V20);
handler.connectBlocks(F3,VMix1,V21);
handler.connectBlocks(F2,VMix1,V23);
handler.connectOutStream(ESER,Vout2);
handler.connectBlocks(VSpl9,VMix5,V29);
handler.connectInStream(VSpl0,S);
handler.connectBlocks(VMix0,E3,V0);
handler.connectBlocks(VSpl1,E1,V3);
handler.connectBlocks(VSpl0,VSpl1,V2);
handler.connectBlocks(VSpl0,E2,V5);
handler.connectBlocks(VSpl1,EPAR,V4);
handler.connectBlocks(E1,VMix0,V7);
handler.connectBlocks(EPAR,VMix0,V6);
handler.connectBlocks(F0,VMix0,V9);
handler.connectBlocks(E2,VMix0,V8);
handler.connectBlocks(E3,VMix1,V11);
handler.connectBlocks(F1,VMix0,V10);
handler.connectBlocks(E4,VMix2,V13);
handler.connectBlocks(VMix1,E4,V12);
handler.connectBlocks(E5,VMix3,V15);
handler.connectBlocks(VMix2,E5,V14);
handler.connectBlocks(E6,VMix4,V17);
handler.connectBlocks(VMix3,E6,V16);
handler.connectBlocks(VMix4,E7,V18);
handler.connectBlocks(E7,VSpl9,V31);
handler.connectOutStream(VSpl9,Vout1);
%% Creating the simulation engine
engine = Engine(handler);
engine.preallocateVariables(engine.handler);

%% Defining constants

% E1.areaEqualTo = EPAR;
% E7.areaEqualTo = ESER;
E0.fixedA = true;
E2.fixedA = true;
E3.fixedA = true;
E4.fixedA = true;
E5.fixedA = true;
E6.fixedA = true;

S.pressure = 217.1849 + 100;
S.fixedPressure = true;
S.saturated = true;

F.flow = 41.95;
F.x_dis = 0.1393;
F.x_tot = 0.1393;
F.temperature = 40 + 273.16; %Assume!
F.fixedTemperature = true;
F.fixedFlow = true;
F.fixedX_Dis = true;
F.fixedX_Tot = true;

Lout.x_dis = 0.514;
Lout.fixedX_Dis = true;

Vout1.pressure = 88.0461;
Vout1.fixedPressure = true;

Vout2.pressure = 88.0461;
Vout2.fixedPressure = true;

%% Bounds

% engine.QBounds = [6.1e3,61.4e3];
engine.QBounds = [1e2,61.4e4]; %Maybe....
% engine.ABounds = [185,12283];
engine.ABounds = [185,120283];
engine.x_disBounds = [0.10,0.6];
engine.x_totBounds = [0.10,0.6];
engine.pressureBounds = [80,320];
engine.temperatureBounds = [satT(engine.pressureBounds(1)/1000,SteamCoefficients())
                         satT(engine.pressureBounds(2)/1000,SteamCoefficients())];

                    
addInfo = {};
addInfo.Vin = S;
addInfo.Vout1 = Vout1;
addInfo.Vout2 = Vout2;

addInfo.VSpl1 = VSpl1;
addInfo.VSpl0 = VSpl0;
addInfo.LSpl3 = LSpl3;
addInfo.LSpl2 = LSpl2;
addInfo.LSpl5 = LSpl5;
addInfo.LSpl7 = LSpl7;
addInfo.VSpl9 = VSpl9;

addInfo.EPAR = EPAR;
addInfo.ESER = ESER;

addInfo.BLToPar = BLToPar;
addInfo.BLToSer = BLToSer;

engine.addInfo = addInfo;

[lb,ub] = engine.getBounds(engine.handler);

lb = [lb;0;0;0;0;0;0;0;60+273.16];
ub = [ub;1;1;1;1;1;1;1;100+273.16];

[iT,iP] = engine.vaporAndCondensateIndices(engine.handler);
constants = SteamCoefficients();

fun = @(x) engine.evaluateBalances(x,engine.handler);
